1
#define指令和 typedef的区别：
答：#define:是在编译预处理中进行替换，不做正确性检查，是预处理命令。
      typedef:是在自己的作用域内给意见存在的类型一个别名。是在编译时处理的。
      区别：1）执行时间不一样：#define在预处理阶段执行，只是单纯的替换
                                            typedef在编译阶段替换，会进行类型检查
               2）作用域不同：#define 无论在哪定义过，在程序其他地方都可使用
                                      typedef 只能在定义的作用域内使用
               4）二者尾标不同 #define 不需要；typedef结尾要；
               5)对指针的操作不一样：
Typedef 
int
 * pint；  
#define PINT int * 
Const pint p；
//p不可更改，p指向的内容可以更改，相当于 int * const p; 
Const 
PINT
 p；
//p可以更改，p指向的内容不能更改，相当于 const int *p；或 int const *p； 
pint s1, s2; 
//s1和s2都是int型指针 
PINT
 s3, s4; 
//相当于int * s3，s4；只有一个是指针。
2.
分别列出他们的适用情景
答：   
#define：全局使用
typedef：限定作用域内使用，需要类型验证使用